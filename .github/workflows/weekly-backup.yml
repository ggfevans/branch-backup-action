# MIT License
#
# Copyright (c) 2025 Gareth Evans
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Weekly Base Branch Backup

on:
  schedule:
    # Run every Sunday at 00:00 UTC
    # Adjust for your timezone: https://crontab.guru/
    - cron: '0 0 * * 0'
  workflow_dispatch: # Allow manual triggering

env:
  BACKUP_PREFIX: 'backup'
  BRANCH_TO_BACKUP: 'prod'

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write # For failure notifications

    steps:
      - name: Checkout repository for action
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Create weekly backup
        uses: ./
        with:
          backup-prefix: ${{ env.BACKUP_PREFIX }}
          branch-to-backup: ${{ env.BRANCH_TO_BACKUP }}

      - name: Create failure issue
        if: failure()
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `⚠️ Weekly Backup Failed - ${date}`,
              body: `The weekly backup workflow failed on ${date}.
              
              **Run Details:**
              - Workflow: ${context.workflow}
              - Run ID: ${context.runId}
              - Run URL: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
              - Branch: \`${{ env.BRANCH_TO_BACKUP }}\`
              
              **Action Required:**
              Please investigate the failure and ensure backups are working properly.
              
              ---
              *This issue was automatically created by the backup workflow.*`,
              labels: ['automation', 'backup-failure', 'priority-high']
            });
